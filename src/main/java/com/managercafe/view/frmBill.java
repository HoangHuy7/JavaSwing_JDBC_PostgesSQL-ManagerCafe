/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.managercafe.view;

import com.managercafe.model.billModel;
import com.managercafe.model.productModel;
import com.managercafe.service.IBillService;
import com.managercafe.service.IDetailBillService;
import com.managercafe.service.IProductService;
import com.managercafe.service.imp.BillService;
import com.managercafe.service.imp.DetailBillService;
import com.managercafe.service.imp.ProductService;
import com.managercafe.util.checkUTIL;
import com.managercafe.util.notificationYesNo;
import java.util.AbstractList;
import java.util.ArrayList;
import java.util.List;
import java.util.Vector;
import javax.swing.DefaultComboBoxModel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author huy
 */
public class frmBill extends javax.swing.JFrame {

    /**
     * Creates new form frmOrder
     */
    public frmBill() {
        initComponents();
    }
    private final IProductService productService = new ProductService();
    private final List<productModel> listProductAll = productService.findAll();
    private List<productModel> listOrder;
    checkUTIL check = new checkUTIL();
    private boolean clickCBBName = false;
    notificationYesNo notiUTIL = new notificationYesNo();
    IBillService billService = new BillService();
    IDetailBillService detailService = new DetailBillService();

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        cbbType = new javax.swing.JComboBox<>();
        cbbName = new javax.swing.JComboBox<>();
        rdbS = new javax.swing.JRadioButton();
        jLabel3 = new javax.swing.JLabel();
        rdbL = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblOrder = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        txtPrice = new javax.swing.JTextField();
        btnAdd = new javax.swing.JButton();
        btnBill = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        txtMonetCustomer = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        spnrQuantity = new javax.swing.JSpinner();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtTotal = new javax.swing.JLabel();
        txtExcess = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel1.setText("Type Product:");

        jLabel2.setText("Name Product:");

        cbbType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbbType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbbTypeActionPerformed(evt);
            }
        });

        cbbName.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbbName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbbNameActionPerformed(evt);
            }
        });

        rdbS.setText("S");
        rdbS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdbSActionPerformed(evt);
            }
        });

        jLabel3.setText("Size:");

        rdbL.setText("L");
        rdbL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdbLActionPerformed(evt);
            }
        });

        tblOrder.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblOrder);

        jLabel4.setText("Price:");

        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnBill.setText("Print Bill");
        btnBill.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBillActionPerformed(evt);
            }
        });

        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        txtMonetCustomer.setText("0");
        txtMonetCustomer.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                txtMonetCustomerMouseEntered(evt);
            }
        });

        jLabel5.setText("Money Customer:");

        spnrQuantity.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spnrQuantityStateChanged(evt);
            }
        });

        jLabel6.setText("Quantity:");

        jLabel7.setText("Total      :");

        jLabel8.setText(" Excess :");

        txtTotal.setText("0");

        txtExcess.setText("-99");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnBill, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnDelete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnAdd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cbbType, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cbbName, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtMonetCustomer)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(rdbS)
                                .addGap(34, 34, 34)
                                .addComponent(rdbL)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(spnrQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel1)
                                    .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 359, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel7)
                                            .addComponent(jLabel8))
                                        .addGap(46, 46, 46)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtExcess)
                                            .addComponent(txtTotal))))
                                .addGap(0, 2, Short.MAX_VALUE)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 698, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbbType, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbbName, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(rdbS)
                    .addComponent(rdbL)
                    .addComponent(spnrQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtMonetCustomer, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtTotal))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtExcess)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnAdd)
                .addGap(18, 18, 18)
                .addComponent(btnBill)
                .addGap(18, 18, 18)
                .addComponent(btnDelete)
                .addGap(60, 60, 60)
                .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 667, Short.MAX_VALUE)
                .addContainerGap())
        );

        spnrQuantity.getAccessibleContext().setAccessibleName("");

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void addComboboxType(List<productModel> listProduct) {
        cbbType.removeAllItems();
        for (productModel model : listProduct) {
            if (((DefaultComboBoxModel) cbbType.getModel()).getIndexOf(model.getType()) == -1) {
                cbbType.addItem(model.getType());
            }
        }
    }

    private void addComboboxName(List<productModel> listProduct) {
        cbbName.removeAllItems();
        String type = cbbType.getSelectedItem().toString();
        for (productModel model : listProduct) {
            if (type.equals(model.getType())) {
                if (((DefaultComboBoxModel) cbbName.getModel()).getIndexOf(model.getName()) == -1) {
                    cbbName.addItem(model.getName());
                }

            }
        }
    }

    private void addPrice(int size, String name) {
        for (productModel model : listProductAll) {
            if (model.getSize() == size && model.getName().equals(name)) {
                txtPrice.setText(model.getPrice().toString());
                return;
            }
        }
        if (rdbS.isSelected()) {
            notiUTIL.NotiError(this, "The store don't have size S");

        } else {
            notiUTIL.NotiError(this, "The store don't have size L");
        }
        rdbS.setSelected(false);
        rdbL.setSelected(false);
    }

    private productModel setProduct(productModel product) {

        String name = cbbName.getSelectedItem().toString();
        int size;
        if (rdbL.isSelected()) {
            size = 1;
        } else {
            size = 2;
        }
        for (productModel model : listProductAll) {
            if (model.getName().equals(name) && model.getSize() == size) {
                Long id = model.getId();
                product.setId(id);
                product.setName(name);
                product.setType(cbbType.getSelectedItem().toString());
                product.setSize(size);
                product.setPrice(Long.parseLong( txtPrice.getText()));
                product.setQuantity((int) spnrQuantity.getValue());
                return product;
            }
        }
        return null;
    }

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        listOrder = new ArrayList<>();
        addComboboxType(listProductAll);
        addComboboxName(listProductAll);
        clickCBBName = true;
        txtPrice.setEnabled(false);
        displayTable(listOrder);
        spnrQuantity.setValue(1);
    }//GEN-LAST:event_formWindowOpened

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        dispose();
    }//GEN-LAST:event_btnBackActionPerformed

    private void cbbNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbbNameActionPerformed
        if (clickCBBName) {
            rdbS.setSelected(false);
            rdbL.setSelected(false);
        }

    }//GEN-LAST:event_cbbNameActionPerformed

    private void cbbTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbbTypeActionPerformed
        if (clickCBBName) {
            addComboboxName(listProductAll);
            rdbS.setSelected(false);
            rdbL.setSelected(false);
        }

    }//GEN-LAST:event_cbbTypeActionPerformed

    private void rdbSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdbSActionPerformed
        rdbL.setSelected(false);
        String name = cbbName.getSelectedItem().toString();
        addPrice(2, name);


    }//GEN-LAST:event_rdbSActionPerformed

    private void rdbLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdbLActionPerformed
        rdbS.setSelected(false);
        String name = cbbName.getSelectedItem().toString();
        addPrice(1, name);
    }//GEN-LAST:event_rdbLActionPerformed
    private boolean checkValues() {
        if (!rdbL.isSelected() && !rdbS.isSelected()) {
            notiUTIL.NotiError(this, "Pls choise size !");
            return false;
        }
        if (cbbType.getItemCount() <= 0 || cbbName.getItemCount() <= 0) {
            notiUTIL.NotiError(this, "Don't have product !");
            return false;
        }
        return true;
    }
    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        if (checkValues()) {
            productModel pd = new productModel();
            pd = setProduct(pd);
            if (listOrder.isEmpty()) {
                listOrder.add((pd));
            } else {
                boolean fLag = true;
                for (productModel model : listOrder) {
                    if (model.getName().equals(pd.getName()) && pd.getSize() == model.getSize()) {
                        int a = model.getQuantity();
                        int b = pd.getQuantity();
                        int kq = a + b;
                        model.setQuantity(kq);
                        fLag = false;
                        break;
                    }
                }
                if (fLag) {
                    listOrder.add(pd);
                }

            }

            displayTable(listOrder);
            txtTotal.setText(billService.total(listOrder).toString());
        }


    }//GEN-LAST:event_btnAddActionPerformed

    private void spnrQuantityStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spnrQuantityStateChanged
        int value = (int) spnrQuantity.getValue();
        if (value < 1) {
            spnrQuantity.setValue(1);
        }
    }//GEN-LAST:event_spnrQuantityStateChanged

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        if (tblOrder.getModel().getRowCount() > 0) {
            Long id = null;
            try {
                id = (Long) tblOrder.getModel().getValueAt(tblOrder.getSelectedRow(), 0);
            } catch (Exception e) {
                notiUTIL.NotiError(this, "Pls choice row want to delete!");
                return;
            }
            for (productModel model : listOrder) {
                if (id == model.getId()) {
                    listOrder.remove(model);
                    break;
                }
            }

            displayTable(listOrder);
        } else {
            notiUTIL.NotiError(this, "Don't have product added !");
        }


    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnBillActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBillActionPerformed
        if (checkValues()) {
            if ("".equals(txtMonetCustomer.getText())) {
                notiUTIL.NotiError(this, "Pls add money custommer!");
            }
            else{
                Long total = Long.parseLong(check.covertPriceTable(txtTotal.getText()));
                boolean bill = billService.insertBill(new billModel(),listOrder,total);
                if (bill) {
                    notiUTIL.NotiError(this, "Thanh toan thanh cong!");
                    listOrder = new ArrayList<productModel>();
                    displayTable(listOrder);
                }
                else{
                     notiUTIL.NotiError(this, "Thanh toan that bai!");
                }
            }
        }
        
    }//GEN-LAST:event_btnBillActionPerformed

    private void txtMonetCustomerMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtMonetCustomerMouseEntered
        
        Long total = Long.parseLong( txtTotal.getText());
        Long excess = Long.parseLong( txtMonetCustomer.getText());
        excess = total - excess;
        txtExcess.setText(excess.toString() );
    }//GEN-LAST:event_txtMonetCustomerMouseEntered
    private void displayTable(List<productModel> listProduct) {

        if (listProduct != null) {
            String[] header = {"ID", "Name", "Price", "Size", "Quantity"};
            DefaultTableModel headerModel = new DefaultTableModel(header, 0);
            tblOrder.setModel(headerModel);
            Vector row = null;
            DefaultTableModel model = (DefaultTableModel) tblOrder.getModel();
            for (productModel product : listProduct) {
                row = new Vector();
                row.add(product.getId());
                row.add(product.getName());
                String price = check.covertPrice(product.getPrice().toString());
                row.add(price);
                if (product.getSize() == 1) {
                    row.add("L");
                } else if (product.getSize() == 2) {
                    row.add("S");
                }
                row.add(product.getQuantity());
                model.addRow(row);
            }

            tblOrder.setModel(model);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmBill.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmBill.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmBill.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmBill.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmBill().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnBill;
    private javax.swing.JButton btnDelete;
    private javax.swing.JComboBox<String> cbbName;
    private javax.swing.JComboBox<String> cbbType;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JRadioButton rdbL;
    private javax.swing.JRadioButton rdbS;
    private javax.swing.JSpinner spnrQuantity;
    private javax.swing.JTable tblOrder;
    private javax.swing.JLabel txtExcess;
    private javax.swing.JTextField txtMonetCustomer;
    private javax.swing.JTextField txtPrice;
    private javax.swing.JLabel txtTotal;
    // End of variables declaration//GEN-END:variables
}
